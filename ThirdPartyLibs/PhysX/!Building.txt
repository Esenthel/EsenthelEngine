* Set Static Lib config:
Edit: "physx\buildtools\presets\public\*.xml" the target platforms you want:
	android           <- here also set "ANDROID_NATIVE_API_LEVEL" value="android-18"
	android-arm64-v8a <- here also set "ANDROID_NATIVE_API_LEVEL" value="android-18"
	ios64
	linux
	mac64
	vc15switch64 <- here also set "compiler="vc16""
	vc15uwp32 <- here also set "compiler="vc16""
	vc15uwp64 <- here also set "compiler="vc16""
	vc16win32
	vc16win64
and set:
"PX_GENERATE_STATIC_LIBRARIES" value="True"
"PX_BUILDSNIPPETS" value="False"
"PX_BUILDPUBLICSAMPLES" value="False"

* Fix for Clang (Mac/iOS/Linux)
Edit "physx/source/compiler/cmake/linux/CMakeLists.txt"
Edit "physx/source/compiler/cmake/mac/CMakeLists.txt"
Edit "physx/source/compiler/cmake/ios/CMakeLists.txt"
remove "-Werror" everywhere

* Configure for Android
Edit "physx\generate_projects.bat"
specify AndroidNDK path, example:
SET PM_ANDROIDNDK_PATH=C:\Progs\AndroidNDK
!! PhysX for Android as of now requires NDK ver 11c or lower - https://github.com/NVIDIAGameWorks/PhysX/issues/386 !!
SET PM_ANDROIDNDK_PATH=C:\Progs\android-ndk-r11c

* Generate Projects:
Run "physx\generate_projects.bat"

* On Windows open "physx\compiler\*\PhysXSDK.sln"
in Visual Studio select all projects in "Physx SDK" folder, properties:
C/C++ \ General \ Debug Information Format = None
right-click selected projects and select "Build Selection"
Libs will get generated in "physx\bin\*\release"

* Compiling for Linux
go to "physx\compiler\linux-release"
run "make"
After building, run "!Extract Linux OBJ Files.bat"

* Compiling for Mac/iOS
go to "physx\compiler\ios64"
go to "physx\compiler\mac64"
open "PhysXSDK.xcodeproj"
at the top select target "ALL_BUILD"
Menu \ Product \ Scheme \ Edit Scheme
Select Profile on left, and on right "Build Configuration" as "release"
Build for profiling

* Compiling for Android on Windows
Official Nvidia instructions need MinGW:
Compiling needs MinGW, install "MinGW Installation Manager (mingw-get)" from - https://osdn.net/projects/mingw/releases/
Run and select "Basic Setup \ mingw32-base-bin"
Menu \ Installation \ Apply Changes
Add "C:\MinGW\bin" to system environment path
open "physx\compiler\android-arm64-v8a-release" in terminal/powershell
run "mingw32-make"

Alternatively can use Esenthel Generated solution inside "Android" folder

* Compiling for Switch
-generate projects from Nintendo SDK
-open in VS
-select proj properties for all projects, select:
	Optimization - Full Optimization with Inlining (-O3)
	Strict Aliasing - Yes (-fstrict-aliasing)
	Omit Frame Pointer - Yes (-fomit-frame-pointer)
	Fast Math - Yes (-ffast-math)
	Unroll Loops - Yes (-funroll-loops)
	Vectorization - Yes (-fvectorize)
	Inline - Yes

* After all building, can run "!Clean.bat" to remove temporary files
